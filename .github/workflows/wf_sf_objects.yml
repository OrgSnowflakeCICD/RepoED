name: wf_sf_objects

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:          
      - name: Retrieve Repository
        uses: actions/checkout@v3
      - name: Use Python 3.8.x
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.x
      - name: Install SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.3/linux_x86_64/snowsql-1.3.0-linux_x86_64.bash
          SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.3.0-linux_x86_64.bash
      - name: Deploy
        env:
          SNOWSQL_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWSQL_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }} 
          SNOWSQL_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWSQL_USER: ${{ secrets.SNOWFLAKE_USERNAME }}
          SNOWSQL_PWD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWSQL_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          TARGET_STAR_SCHEMA: ${{ vars.TARGET_STAR_SCHEMA }}
        run: |
          # create master change history table if not exists
          ddl_master_change_history_query=$(cat "$GITHUB_WORKSPACE/objects/change_history/ddl_master_change_history.sql" | sed "s/{TARGET_STAR_SCHEMA}/$TARGET_STAR_SCHEMA/g")
          echo "$ddl_master_change_history_query"
          ~/bin/snowsql -q "$ddl_master_change_history_query"        
          pip install schemachange==3.6.1
          echo "Execute conformed dims first!"
          mkdir ${{ github.workspace }}/objects/folder_tmp
          cp ${{ github.workspace }}/objects/*__CONFORMEDDIM_* ${{ github.workspace }}/objects/folder_tmp
          
          ddl_project_change_history_query=$(cat "$GITHUB_WORKSPACE/objects/change_history/ddl_project_change_history.sql" | sed "s/{TARGET_STAR_SCHEMA}/CONFORMEDDIM/g")
          echo "$ddl_project_change_history_query"
          ~/bin/snowsql -q "$ddl_project_change_history_query"          
          schemachange -f $GITHUB_WORKSPACE/objects/folder_tmp -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER -r $SNOWSQL_ROLE -w $SNOWSQL_WAREHOUSE -d $SNOWSQL_DATABASE -c $SNOWSQL_DATABASE.SCHEMACHANGE.CHANGE_HISTORY_CONFORMEDDIM
          # merge project change history into master change history table
          # finally drop project change history table
          dml_change_history_query=$(cat "$GITHUB_WORKSPACE/objects/change_history/dml_change_history.sql" | sed "s/{TARGET_STAR_SCHEMA}/CONFORMEDDIM/g")
          echo "$dml_change_history_query"
          ~/bin/snowsql -q "$dml_change_history_query"
          rm -rf ${{ github.workspace }}/objects/folder_tmp          





          # if [[ -n $TARGET_STAR_SCHEMA ]]; then
          #   # if this job runs at project repo
          #   # only run the target project subdirectory and skip the other subdirectories
          #   echo "Target STAR SCHEMA is $TARGET_STAR_SCHEMA!"
            
          #   schemachange -f $GITHUB_WORKSPACE/objects/$TARGET_STAR_SCHEMA -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER -r $SNOWSQL_ROLE -w $SNOWSQL_WAREHOUSE -d $SNOWSQL_DATABASE -c $SNOWSQL_DATABASE.SCHEMACHANGE.CHANGE_HISTORY
          # else
          #   # if this job runs at ED repo
          #   # loop through all subdirectories for all projects
          #   for dir in "$GITHUB_WORKSPACE/objects"/*/; do
          #     subdir=$(basename "$dir")
          #     echo "Found project subdirectory: $subdir"
          #     # create change history table for project if not exists
          #     ddl_project_change_history_query=$(cat "$GITHUB_WORKSPACE/objects/ddl_project_change_history.sql" | sed "s/{PROJECT}/$subdir/g")
          #     echo "$ddl_project_change_history_query"
          #     ~/bin/snowsql -q "$ddl_project_change_history_query"
          #     # run schemachange
          #     schemachange -f $GITHUB_WORKSPACE/objects/$subdir -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER -r $SNOWSQL_ROLE -w $SNOWSQL_WAREHOUSE -d $SNOWSQL_DATABASE -c $SNOWSQL_DATABASE.SCHEMACHANGE.CHANGE_HISTORY_$subdir 
          #     # merge project change history into master change history table
          #     # finally drop project change history table
          #     dml_change_history_query=$(cat "$GITHUB_WORKSPACE/objects/dml_change_history.sql" | sed "s/{PROJECT}/$subdir/g")
          #     echo "$dml_change_history_query"
          #     ~/bin/snowsql -q "$dml_change_history_query"
          #   done
          # fi
